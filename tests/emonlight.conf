# WARNING this program can drive gpio pins only after pin configuration is made by running gpio 

# enable verbose mode
verbose = true;

sources = ({
    # gpio pin for pulse signal reading
    pin = 17;
    # number of pulses equivalent to 1 kWh
    pulses-per-kilowatt-hour = 1000;
}, {
    pin = 3;
    pulses-per-kilowatt-hour = 1200;
});

servers = ({
    url = "http://emoncms.org";
    protocol = "emoncms";
    # map = ( { pin-source #1, node-id #1, api-key #1 }, { pin-source #2, node-id #2, api-key #2 }, ... );
    map = ({
        pin = 17;
        node-id = 5;
        api-key = "key-1";
    }, {
        pin = 3; 
        node-id = 6; 
        api-key = "key-2";
    });
}, {
    url = "http://server.address";
    protocol = "emonlight";
    map = ({
        pin = 17;
        node-id = 1;
        api-key = "key-3";
    }, {
        pin = 3; 
        node-id = 2;
        api-key = "key-4";
    });
});

# gpio pin to drive buzzer
buzzer-pin = 3
buzzer-source = 17
# power thresholds
power-soft-threshold = 3300
# 3 hours
power-soft-threshold-time = 10800 
power-hard-threshold = 4000
# 4 minutes
power-hard-threshold-time = 240

# if a data-log configuration is found then all data received is saved to this file
data-log = "/var/lib/emonlight/emonlight-data.log"
# store of status persistent information: time and count for last pulse received
data-store = "/var/lib/emonlight/emonlight-data"
